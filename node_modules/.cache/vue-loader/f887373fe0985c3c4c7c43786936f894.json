{"remainingRequest":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\src\\components\\Archive.vue?vue&type=template&id=56a83c7c&scoped=true&","dependencies":[{"path":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\src\\components\\Archive.vue","mtime":1643449377760},{"path":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\marko\\IdeaProjects\\formula1_portal_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}